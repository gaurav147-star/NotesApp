[{"/home/gauravg/Documents/github/NotesApp/client/src/index.js":"1","/home/gauravg/Documents/github/NotesApp/client/src/App.js":"2","/home/gauravg/Documents/github/NotesApp/client/src/components/Home.js":"3","/home/gauravg/Documents/github/NotesApp/client/src/components/Alert.js":"4","/home/gauravg/Documents/github/NotesApp/client/src/components/Login.js":"5","/home/gauravg/Documents/github/NotesApp/client/src/components/Signup.js":"6","/home/gauravg/Documents/github/NotesApp/client/src/context/notes/NoteState.js":"7","/home/gauravg/Documents/github/NotesApp/client/src/components/Navbar.js":"8","/home/gauravg/Documents/github/NotesApp/client/src/components/Notes.js":"9","/home/gauravg/Documents/github/NotesApp/client/src/context/notes/NoteContext.js":"10","/home/gauravg/Documents/github/NotesApp/client/src/components/Noteitem.js":"11","/home/gauravg/Documents/github/NotesApp/client/src/components/AddNote.js":"12"},{"size":221,"mtime":1639320385744,"results":"13","hashOfConfig":"14"},{"size":1339,"mtime":1639320385744,"results":"15","hashOfConfig":"14"},{"size":201,"mtime":1639320385744,"results":"16","hashOfConfig":"14"},{"size":519,"mtime":1639320385744,"results":"17","hashOfConfig":"14"},{"size":2514,"mtime":1639320385744,"results":"18","hashOfConfig":"14"},{"size":3336,"mtime":1639320385744,"results":"19","hashOfConfig":"14"},{"size":3031,"mtime":1639320385744,"results":"20","hashOfConfig":"14"},{"size":2221,"mtime":1639320385744,"results":"21","hashOfConfig":"14"},{"size":4935,"mtime":1655456056825,"results":"22","hashOfConfig":"14"},{"size":109,"mtime":1639320385744,"results":"23","hashOfConfig":"14"},{"size":992,"mtime":1639320385744,"results":"24","hashOfConfig":"14"},{"size":2222,"mtime":1639320385744,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1uyn2et",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/gauravg/Documents/github/NotesApp/client/src/index.js",[],["52","53"],"/home/gauravg/Documents/github/NotesApp/client/src/App.js",[],"/home/gauravg/Documents/github/NotesApp/client/src/components/Home.js",[],"/home/gauravg/Documents/github/NotesApp/client/src/components/Alert.js",[],"/home/gauravg/Documents/github/NotesApp/client/src/components/Login.js",[],"/home/gauravg/Documents/github/NotesApp/client/src/components/Signup.js",[],"/home/gauravg/Documents/github/NotesApp/client/src/context/notes/NoteState.js",["54","55"],"import NoteContext from \"./NoteContext\";\r\nimport { useState } from \"react\";\r\nrequire(\"dotenv\").config();\r\nconst NoteState = (props) => {\r\n\r\n  \r\n  const host = process.env.REACT_APP_HOST_KEY;\r\n  // const host = \"http://localhost:5000\";\r\n  const notesInitial = [];\r\n  const [notes, setNotes] = useState(notesInitial);\r\n\r\n  // Get all Notes\r\n  const getNotes = async () => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    // console.log(json);\r\n    setNotes(json);\r\n  };\r\n\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    // TODO: API Call\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/addnotes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    const json = await response.json();\r\n    setNotes(notes.concat(json));\r\n    // console.log(\"Adding a new note\");\r\n    // const note = {\r\n    //   title: title,\r\n    //   description: description,\r\n    //   tag: tag,\r\n    // };\r\n    // setNotes(notes.concat(note));\r\n  };\r\n\r\n  // Delete a Note\r\n  const deleteNote = async (id) => {\r\n    // TODO: API Call\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const json = response.json();\r\n    // console.log(json);\r\n\r\n    // console.log(\"Deleting the note with id\" + id);\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n  };\r\n  // Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    });\r\n    // const json = response.json();\r\n    const json = response.json();\r\n    // console.log(json);\r\n    let newNotes = JSON.parse(JSON.stringify(notes));\r\n\r\n    // Logic to edit in client\r\n    for (let index = 0; index < newNotes.length; index++) {\r\n      const element = newNotes[index];\r\n      if (element._id === id) {\r\n        newNotes[index].title = title;\r\n        newNotes[index].description = description;\r\n        newNotes[index].tag = tag;\r\n      }\r\n    }\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, addNote, deleteNote, editNote, getNotes }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\nexport default NoteState;\r\n","/home/gauravg/Documents/github/NotesApp/client/src/components/Navbar.js",[],"/home/gauravg/Documents/github/NotesApp/client/src/components/Notes.js",[],"/home/gauravg/Documents/github/NotesApp/client/src/context/notes/NoteContext.js",[],"/home/gauravg/Documents/github/NotesApp/client/src/components/Noteitem.js",[],"/home/gauravg/Documents/github/NotesApp/client/src/components/AddNote.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":60,"column":11,"nodeType":"62","messageId":"63","endLine":60,"endColumn":15},{"ruleId":"60","severity":1,"message":"61","line":81,"column":11,"nodeType":"62","messageId":"63","endLine":81,"endColumn":15},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'json' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]